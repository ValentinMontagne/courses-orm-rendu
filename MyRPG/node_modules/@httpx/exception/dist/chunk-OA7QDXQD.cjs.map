{"version":3,"sources":["../src/typeguards/isErrorWithErrorStatusCode.ts","../src/typeguards/isObjectWithErrorStatusCode.ts"],"names":["isErrorWithErrorStatusCode","error","isHttpErrorStatusCode","isObjectWithErrorStatusCode","objOrPlainObject"],"mappings":"yCAOO,IAAMA,EACXC,GAGEA,aAAiB,OACjBC,EAAuBD,GAAoC,UAAU,ECLlE,IAAME,EACXC,GAEOF,EACJE,GAAgD,UACnD","sourcesContent":["import type { ErrorWithErrorStatusCode } from '../types';\nimport { isHttpErrorStatusCode } from './isHttpErrorStatusCode';\n\n/**\n * Checks if a value is an instanceof Error and has a statusCode field\n * indicating an error http status (4xx or 5xx)\n */\nexport const isErrorWithErrorStatusCode = (\n  error: unknown\n): error is ErrorWithErrorStatusCode => {\n  return (\n    error instanceof Error &&\n    isHttpErrorStatusCode((error as ErrorWithErrorStatusCode)?.statusCode)\n  );\n};\n","import type { ObjectWithErrorStatusCode } from '../types/ObjectWithErrorStatusCode';\nimport { isHttpErrorStatusCode } from './isHttpErrorStatusCode';\n\n/**\n * Checks if a value is an object (or a plain object) and has a statusCode field\n * indicating an error http status (4xx or 5xx)\n */\nexport const isObjectWithErrorStatusCode = (\n  objOrPlainObject: unknown\n): objOrPlainObject is ObjectWithErrorStatusCode => {\n  return isHttpErrorStatusCode(\n    (objOrPlainObject as ObjectWithErrorStatusCode)?.statusCode\n  );\n};\n"]}